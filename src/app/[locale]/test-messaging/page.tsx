'use client';

import React, { useState } from 'react';
import { MessageBubble } from '@/components/messaging/MessageBubble';
import { 
  AIOrderCard, 
  JobCard, 
  SolutionCard, 
  AIBriefCard 
} from '@/components/messaging/MessageCards';
import { 
  Message,
  AIOrderAttachment,
  JobCardAttachment,
  SolutionCardAttachment,
  AIBriefData
} from '@/services/messaging';
import Navbar from '@/components/Navbar';

export default function TestMessagingPage() {
  const [selectedDemo, setSelectedDemo] = useState<'cards' | 'messages' | 'chat'>('cards');

  // –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è AI –∑–∞–∫–∞–∑–∞
  const aiOrderData: AIOrderAttachment = {
    specialistId: 'alex-ai',
    specialistName: 'Alex AI',
    specialistTitle: 'AI Avatar Creator',
    specialistAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=AlexAI',
    orderType: 'task',
    orderTitle: '–°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –¥–ª—è LinkedIn',
    orderDescription: '–ù—É–∂–µ–Ω –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –≤ LinkedIn. –°—Ç–∏–ª—å - –¥–µ–ª–æ–≤–æ–π, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π.',
    brief: '–ú—É–∂—á–∏–Ω–∞, 30-35 –ª–µ—Ç, –¥–µ–ª–æ–≤–æ–π –∫–æ—Å—Ç—é–º, —É–≤–µ—Ä–µ–Ω–Ω—ã–π –≤–∑–≥–ª—è–¥, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–æ–Ω',
    price: 5,
    currency: 'USD',
    status: 'brief_provided',
    deliveryTime: '2 —á–∞—Å–∞',
    aiProvider: 'openai',
    generatedBrief: '–°–æ–∑–¥–∞–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–µ–ª–æ–≤–æ–π –∞–≤–∞—Ç–∞—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π',
    revisionCount: 0,
    maxRevisions: 3
  };

  // –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∂–æ–±–∞
  const jobCardData: JobCardAttachment = {
    jobId: 'job-123',
    jobTitle: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
    jobDescription: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–∞–±–æ—Ä –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã',
    budget: {
      min: 500,
      max: 1500,
      currency: 'USD'
    },
    deadline: '2025-02-15',
    skills: ['React', 'TypeScript', 'Storybook', 'CSS-in-JS'],
    clientId: 'client-456',
    clientName: 'TechStartup Inc',
    clientAvatar: 'https://api.dicebear.com/7.x/initials/svg?seed=TS',
    applicationsCount: 12,
    status: 'open',
    proposalAmount: 800,
    proposalDeadline: '2025-02-10',
    proposalMessage: '–ì–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –≤ —Å—Ä–æ–∫'
  };

  // –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è
  const solutionCardData: SolutionCardAttachment = {
    solutionId: 'solution-789',
    solutionTitle: '–ì–æ—Ç–æ–≤–∞—è CRM —Å–∏—Å—Ç–µ–º–∞',
    solutionDescription: '–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è CRM —Å–∏—Å—Ç–µ–º–∞ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º–∏, —Å–¥–µ–ª–∫–∞–º–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π',
    price: 199,
    currency: 'USD',
    category: 'Business Software',
    tags: ['CRM', 'React', 'Node.js', 'MongoDB'],
    sellerId: 'seller-101',
    sellerName: 'DevSolutions',
    sellerAvatar: 'https://api.dicebear.com/7.x/initials/svg?seed=DS',
    rating: 4.8,
    salesCount: 156,
    previewImages: ['/images/crm-preview.jpg'],
    deliveryTime: '24 —á–∞—Å–∞',
    features: [
      '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
      '–í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂',
      '–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å email'
    ],
    customization: {
      requirements: '–î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram API',
      additionalPrice: 50,
      estimatedTime: '2-3 –¥–Ω—è'
    }
  };

  // –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è AI –±—Ä–∏—Ñ–∞
  const aiBriefData: AIBriefData = {
    originalRequest: '–°–æ–∑–¥–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞ –≤ —Å—Ñ–µ—Ä–µ FinTech',
    generatedBrief: {
      title: '–õ–æ–≥–æ—Ç–∏–ø –¥–ª—è FinTech —Å—Ç–∞—Ä—Ç–∞–ø–∞',
      description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø, –æ—Ç—Ä–∞–∂–∞—é—â–∏–π –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ñ–µ—Ä–µ',
      requirements: [
        '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω',
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏–Ω–µ–≥–æ/–∑–µ–ª–µ–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞',
        '–°–∏–º–≤–æ–ª –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤'
      ],
      deliverables: [
        '–õ–æ–≥–æ—Ç–∏–ø –≤ –≤–µ–∫—Ç–æ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (SVG, AI)',
        '–†–∞—Å—Ç—Ä–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ (PNG, JPG)',
        'Favicon',
        '–ë—Ä–µ–Ω–¥–±—É–∫ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
      ],
      timeline: '3-5 –¥–Ω–µ–π',
      budget: 150,
      technicalSpecs: [
        '–í–µ–∫—Ç–æ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞',
        '–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ CMYK –∏ RGB',
        '–ú–æ–Ω–æ—Ö—Ä–æ–º–Ω–∞—è –≤–µ—Ä—Å–∏—è',
        '–†–∞–∑–º–µ—Ä—ã –æ—Ç 16x16px –¥–æ 1000x1000px'
      ],
      examples: [
        'Stripe - –º–∏–Ω–∏–º–∞–ª–∏–∑–º –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å',
        'Revolut - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å –∏ –¥–∏–Ω–∞–º–∏–∫–∞',
        'Wise - –ø—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –¥–æ–≤–µ—Ä–∏–µ'
      ]
    },
    specialistId: 'luna-design',
    specialistName: 'Luna Design',
    aiProvider: 'anthropic',
    confidence: 92,
    estimatedTime: '3-5 –¥–Ω–µ–π',
    suggestedRevisions: [
      '–£—Ç–æ—á–Ω–∏—Ç—å —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é',
      '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤',
      '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –±—Ä–µ–Ω–¥–∞'
    ]
  };

  // –î–µ–º–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const demoMessages: Message[] = [
    {
      $id: '1',
      senderId: 'user-1',
      receiverId: 'user-2',
      conversationId: 'conv-1',
      content: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º?',
      messageType: 'text',
      isRead: true,
      createdAt: new Date(Date.now() - 3600000).toISOString(),
      isDeleted: false
    },
    {
      $id: '2',
      senderId: 'user-2',
      receiverId: 'user-1',
      conversationId: 'conv-1',
      content: 'ü§ñ AI –∑–∞–∫–∞–∑: –°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –¥–ª—è LinkedIn',
      messageType: 'ai_order',
      aiOrderData: aiOrderData,
      isRead: true,
      createdAt: new Date(Date.now() - 3000000).toISOString(),
      isDeleted: false
    },
    {
      $id: '3',
      senderId: 'user-1',
      receiverId: 'user-2',
      conversationId: 'conv-1',
      content: 'üíº –ù–æ–≤—ã–π –¥–∂–æ–±: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
      messageType: 'job_card',
      jobCardData: jobCardData,
      isRead: false,
      createdAt: new Date(Date.now() - 1800000).toISOString(),
      isDeleted: false
    },
    {
      $id: '4',
      senderId: 'user-2',
      receiverId: 'user-1',
      conversationId: 'conv-1',
      content: 'üìù –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!',
      messageType: 'ai_brief',
      aiBriefData: aiBriefData,
      isRead: false,
      createdAt: new Date(Date.now() - 900000).toISOString(),
      isDeleted: false,
      metadata: {
        aiGenerated: true,
        needsApproval: true,
        confidenceScore: 92
      }
    },
    {
      $id: '5',
      senderId: 'user-1',
      receiverId: 'user-2',
      conversationId: 'conv-1',
      content: 'üí° –†–µ—à–µ–Ω–∏–µ: –ì–æ—Ç–æ–≤–∞—è CRM —Å–∏—Å—Ç–µ–º–∞',
      messageType: 'solution_card',
      solutionCardData: solutionCardData,
      isRead: false,
      createdAt: new Date(Date.now() - 300000).toISOString(),
      isDeleted: false
    }
  ];

  const handleCardAction = (action: string, data: any) => {
    console.log('Card action:', action, data);
    alert(`–î–µ–π—Å—Ç–≤–∏–µ: ${action}\n–î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data, null, 2)}`);
  };

  return (
    <div className="min-h-screen bg-[#0A0A0F]">
      <Navbar />
      
      <div className="pt-20 pb-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-6xl mx-auto">
          {/* Header */}
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-white mb-4">
              üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–æ–æ–±—â–µ–Ω–∏–π
            </h1>
            <p className="text-gray-400 mb-6">
              –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ —á–∞—Ç–µ
            </p>
            
            {/* Navigation */}
            <div className="flex justify-center space-x-4">
              <button
                onClick={() => setSelectedDemo('cards')}
                className={`px-4 py-2 rounded-lg transition-colors ${
                  selectedDemo === 'cards'
                    ? 'bg-purple-600 text-white'
                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
                }`}
              >
                –ö–∞—Ä—Ç–æ—á–∫–∏
              </button>
              <button
                onClick={() => setSelectedDemo('messages')}
                className={`px-4 py-2 rounded-lg transition-colors ${
                  selectedDemo === 'messages'
                    ? 'bg-purple-600 text-white'
                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
                }`}
              >
                –°–æ–æ–±—â–µ–Ω–∏—è
              </button>
              <button
                onClick={() => setSelectedDemo('chat')}
                className={`px-4 py-2 rounded-lg transition-colors ${
                  selectedDemo === 'chat'
                    ? 'bg-purple-600 text-white'
                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
                }`}
              >
                –î–µ–º–æ —á–∞—Ç
              </button>
            </div>
          </div>

          {/* Content */}
          {selectedDemo === 'cards' && (
            <div className="space-y-8">
              <h2 className="text-2xl font-bold text-white mb-6">–¢–∏–ø—ã –∫–∞—Ä—Ç–æ—á–µ–∫</h2>
              
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                {/* AI Order Card */}
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-white">ü§ñ AI Order Card</h3>
                  <AIOrderCard data={aiOrderData} onAction={handleCardAction} />
                </div>

                {/* Job Card */}
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-white">üíº Job Card</h3>
                  <JobCard data={jobCardData} onAction={handleCardAction} />
                </div>

                {/* Solution Card */}
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-white">üí° Solution Card</h3>
                  <SolutionCard data={solutionCardData} onAction={handleCardAction} />
                </div>

                {/* AI Brief Card */}
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-white">üìù AI Brief Card</h3>
                  <AIBriefCard data={aiBriefData} onAction={handleCardAction} />
                </div>
              </div>
            </div>
          )}

          {selectedDemo === 'messages' && (
            <div className="space-y-8">
              <h2 className="text-2xl font-bold text-white mb-6">–°–æ–æ–±—â–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏</h2>
              
              <div className="max-w-2xl mx-auto space-y-4">
                {demoMessages.map((message, index) => (
                  <MessageBubble
                    key={message.$id}
                    message={message}
                    isFromCurrentUser={index % 2 === 0}
                    onCardAction={handleCardAction}
                    onReaction={(emoji) => console.log('Reaction:', emoji)}
                    onEdit={(content) => console.log('Edit:', content)}
                    onDelete={() => console.log('Delete message')}
                    onReply={() => console.log('Reply to message')}
                    onForward={() => console.log('Forward message')}
                  />
                ))}
              </div>
            </div>
          )}

          {selectedDemo === 'chat' && (
            <div className="space-y-8">
              <h2 className="text-2xl font-bold text-white mb-6">–î–µ–º–æ —á–∞—Ç</h2>
              
              <div className="max-w-4xl mx-auto bg-gray-900 rounded-xl border border-gray-700 overflow-hidden">
                {/* Chat Header */}
                <div className="bg-gray-800 px-6 py-4 border-b border-gray-700">
                  <div className="flex items-center space-x-3">
                    <img
                      src="https://api.dicebear.com/7.x/avataaars/svg?seed=AlexAI"
                      alt="Alex AI"
                      className="w-10 h-10 rounded-full"
                    />
                    <div>
                      <h3 className="text-white font-semibold">Alex AI</h3>
                      <p className="text-gray-400 text-sm">AI Avatar Creator</p>
                    </div>
                    <div className="ml-auto">
                      <span className="bg-green-500 text-white text-xs px-2 py-1 rounded-full">
                        –û–Ω–ª–∞–π–Ω
                      </span>
                    </div>
                  </div>
                </div>

                {/* Chat Messages */}
                <div className="h-96 overflow-y-auto p-6 space-y-4 bg-gray-950">
                  {demoMessages.map((message, index) => (
                    <MessageBubble
                      key={message.$id}
                      message={message}
                      isFromCurrentUser={index % 2 === 0}
                      onCardAction={handleCardAction}
                      onReaction={(emoji) => console.log('Reaction:', emoji)}
                      onEdit={(content) => console.log('Edit:', content)}
                      onDelete={() => console.log('Delete message')}
                      onReply={() => console.log('Reply to message')}
                      onForward={() => console.log('Forward message')}
                    />
                  ))}
                </div>

                {/* Chat Input */}
                <div className="bg-gray-800 px-6 py-4 border-t border-gray-700">
                  <div className="flex space-x-3">
                    <input
                      type="text"
                      placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                      className="flex-1 bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500"
                    />
                    <button className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors">
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                    </button>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Info */}
          <div className="mt-12 bg-gray-800/50 rounded-xl p-6 border border-gray-700">
            <h3 className="text-lg font-semibold text-white mb-4">
              ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 text-gray-300">
              <div>
                <h4 className="font-medium text-white mb-2">–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h4>
                <ul className="space-y-1 text-sm">
                  <li>‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏ AI –∑–∞–∫–∞–∑–æ–≤</li>
                  <li>‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏ –¥–∂–æ–±–æ–≤</li>
                  <li>‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—à–µ–Ω–∏–π</li>
                  <li>‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏ AI –±—Ä–∏—Ñ–æ–≤</li>
                  <li>‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</li>
                  <li>‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</li>
                </ul>
              </div>
              <div>
                <h4 className="font-medium text-white mb-2">–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h4>
                <ul className="space-y-1 text-sm">
                  <li>üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º AI</li>
                  <li>üîÑ Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
                  <li>üîÑ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
                  <li>üîÑ –†–µ–∞–ª—Ç–∞–π–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
                  <li>üîÑ –§–∞–π–ª–æ–≤—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è</li>
                  <li>üîÑ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 