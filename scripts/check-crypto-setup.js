#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.local
const envPath = path.join(process.cwd(), '.env.local');
let envExists = false;
let walletConnectConfigured = false;

try {
  if (fs.existsSync(envPath)) {
    envExists = true;
    const envContent = fs.readFileSync(envPath, 'utf8');
    
    if (envContent.includes('NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID')) {
      const match = envContent.match(/NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=(.+)/);
      if (match && match[1] && match[1] !== 'demo-project-id') {
        walletConnectConfigured = true;
      }
    }
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env.local:', error.message);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
const requiredFiles = [
  'src/providers/Web3Provider.tsx',
  'src/components/web3/CryptoPaymentModal.tsx',
  'src/lib/web3/config.ts',
  'src/lib/web3/escrow-contract.sol',
  'src/app/api/web3/create-escrow/route.ts'
];

let allFilesExist = true;
requiredFiles.forEach(file => {
  if (!fs.existsSync(path.join(process.cwd(), file))) {
    console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`);
    allFilesExist = false;
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
const packagePath = path.join(process.cwd(), 'package.json');
let requiredDepsInstalled = false;

try {
  const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
  const deps = { ...packageJson.dependencies, ...packageJson.devDependencies };
  
  const requiredDeps = ['wagmi', 'viem', '@tanstack/react-query', '@reown/appkit'];
  const missingDeps = requiredDeps.filter(dep => !deps[dep]);
  
  if (missingDeps.length === 0) {
    requiredDepsInstalled = true;
  } else {
    console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missingDeps.join(', ')}`);
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json:', error.message);
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
console.log('üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:\n');

console.log('1. –§–∞–π–ª—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
console.log(allFilesExist ? '   ‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ' : '   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã');

console.log('2. –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Web3:');
console.log(requiredDepsInstalled ? '   ‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã' : '   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');

console.log('3. –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
console.log(envExists ? '   ‚úÖ .env.local —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' : '   ‚ùå .env.local –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');

console.log('4. WalletConnect Project ID:');
console.log(walletConnectConfigured ? '   ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '   ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (demo-project-id)');

// –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
const allReady = allFilesExist && requiredDepsInstalled && envExists;
const productionReady = allReady && walletConnectConfigured;

console.log('\nüéØ –°–¢–ê–¢–£–° –ì–û–¢–û–í–ù–û–°–¢–ò:\n');

if (productionReady) {
  console.log('üü¢ –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–û! –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–æ—à–µ–ª—å–∫–∞–º–∏');
} else if (allReady) {
  console.log('üü° –ß–ê–°–¢–ò–ß–ù–û –ì–û–¢–û–í–û. –ù—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ WalletConnect Project ID –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏');
} else {
  console.log('üî¥ –ù–ï –ì–û–¢–û–í–û. –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
}

console.log('\nüìù –ß–¢–û –î–ï–õ–ê–¢–¨ –î–ê–õ–¨–®–ï:\n');

if (!allFilesExist) {
  console.log('‚ùó –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
}

if (!requiredDepsInstalled) {
  console.log('‚ùó –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install wagmi viem @tanstack/react-query @reown/appkit --legacy-peer-deps');
}

if (!envExists) {
  console.log('‚ùó –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env.local –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞');
}

if (!walletConnectConfigured) {
  console.log('‚ùó –ü–æ–ª—É—á–∏—Ç—å WalletConnect Project ID:');
  console.log('   1. –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ https://cloud.walletconnect.com');
  console.log('   2. –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏ –ø—Ä–æ–µ–∫—Ç');
  console.log('   3. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å Project ID');
  console.log('   4. –î–æ–±–∞–≤–∏—Ç—å –≤ .env.local: NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=–≤–∞—à_id');
}

console.log('\nüöÄ –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
console.log('1. npm run dev');
console.log('2. –û—Ç–∫—Ä—ã—Ç—å –ª—é–±–æ–π –¥–∂–æ–± ‚Üí Messages');
console.log('3. –ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "‚ö° –ö—Ä–∏–ø—Ç–∞"');
console.log('4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞');

console.log('\nüí° –°–ø—Ä–∞–≤–∫–∞: —Å–º. —Ñ–∞–π–ª API_SETUP_GUIDE.md');
