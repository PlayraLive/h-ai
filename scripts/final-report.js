const { Client, Databases } = require('node-appwrite');
require('dotenv').config({ path: '.env.local' });

const client = new Client()
  .setEndpoint(process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT)
  .setProject(process.env.NEXT_PUBLIC_APPWRITE_PROJECT_ID)
  .setKey(process.env.APPWRITE_API_KEY);

const databases = new Databases(client);
const DATABASE_ID = process.env.NEXT_PUBLIC_APPWRITE_DATABASE_ID;

async function generateFinalReport() {
  console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –û –°–û–°–¢–û–Ø–ù–ò–ò –ö–û–õ–õ–ï–ö–¶–ò–ô –ò –ê–¢–†–ò–ë–£–¢–û–í\n');
  console.log('='.repeat(60));
  
  const collections = [
    { name: 'users', description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (—Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã –∏ –∫–ª–∏–µ–Ω—Ç—ã)' },
    { name: 'jobs', description: '–í–∞–∫–∞–Ω—Å–∏–∏ –∏ –ø—Ä–æ–µ–∫—Ç—ã' },
    { name: 'proposals', description: '–ó–∞—è–≤–∫–∏ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã' },
    { name: 'conversations', description: '–ß–∞—Ç—ã –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏' },
    { name: 'messages', description: '–°–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–∞—Ö' },
    { name: 'comments', description: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º' },
    { name: 'bookmarks', description: '–ó–∞–∫–ª–∞–¥–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' },
    { name: 'notifications', description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' },
    { name: 'projects', description: '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã' },
    { name: 'ai_specialists', description: 'AI —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã' }
  ];

  let totalCollections = 0;
  let totalAttributes = 0;
  let collectionsWithIssues = 0;

  for (const collection of collections) {
    try {
      const collectionInfo = await databases.getCollection(DATABASE_ID, collection.name);
      totalCollections++;
      totalAttributes += collectionInfo.attributes.length;
      
      console.log(`\nüìã ${collection.name.toUpperCase()}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${collection.description}`);
      console.log(`   ‚úÖ –°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é`);
      console.log(`   üìä –ê—Ç—Ä–∏–±—É—Ç–æ–≤: ${collectionInfo.attributes.length}`);
      
      if (collectionInfo.attributes.length === 0) {
        console.log(`   ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ—Ç –∞—Ç—Ä–∏–±—É—Ç–æ–≤!`);
        collectionsWithIssues++;
      }
      
    } catch (error) {
      console.log(`\nüìã ${collection.name.toUpperCase()}`);
      console.log(`   ‚ùå –û–®–ò–ë–ö–ê: ${error.message}`);
      collectionsWithIssues++;
    }
  }

  console.log('\n' + '='.repeat(60));
  console.log('üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log(`   ‚Ä¢ –í—Å–µ–≥–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${totalCollections}`);
  console.log(`   ‚Ä¢ –í—Å–µ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–æ–≤: ${totalAttributes}`);
  console.log(`   ‚Ä¢ –ö–æ–ª–ª–µ–∫—Ü–∏–π —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏: ${collectionsWithIssues}`);
  console.log(`   ‚Ä¢ –ö–æ–ª–ª–µ–∫—Ü–∏–π –≥–æ—Ç–æ–≤—ã—Ö –∫ —Ä–∞–±–æ—Ç–µ: ${totalCollections - collectionsWithIssues}`);
  
  console.log('\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø, –ö–û–¢–û–†–´–ï –ë–´–õ–ò –í–´–ü–û–õ–ù–ï–ù–´:');
  console.log('   1. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∞—Ç—Ä–∏–±—É—Ç—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é USERS (rating, reviewCount, totalEarnings, etc.)');
  console.log('   2. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∞—Ç—Ä–∏–±—É—Ç—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é COMMENTS (job_id, user_id, content, etc.)');
  console.log('   3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∞—Ç—Ä–∏–±—É—Ç—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é PROPOSALS (status, clientResponse, etc.)');
  console.log('   4. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∞—Ç—Ä–∏–±—É—Ç—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é BOOKMARKS (user_id, job_id, etc.)');
  console.log('   5. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—à–∏–±–∫–∏ —Å params –≤ API —Ä–æ—É—Ç–∞—Ö');
  
  console.log('\nüéØ –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:');
  console.log('   ‚Ä¢ ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  console.log('   ‚Ä¢ ‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  console.log('   ‚Ä¢ ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º');
  console.log('   ‚Ä¢ ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–ª–∞–¥–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  console.log('   ‚Ä¢ ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫ —Å —Å—Ç–∞—Ç—É—Å–∞–º–∏ (pending/accepted/rejected)');
  console.log('   ‚Ä¢ ‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
  console.log('   ‚Ä¢ ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —á–∞—Ç–æ–≤');
  
  console.log('\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ /en/freelancers');
  console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã');
  console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ñ–∏–ª–∏ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ –Ω–∞ /en/profile/[userId]');
  console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤');
  console.log('   5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º—É –∑–∞–∫–ª–∞–¥–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤');
  
  console.log('\n' + '='.repeat(60));
}

generateFinalReport().catch(console.error);
