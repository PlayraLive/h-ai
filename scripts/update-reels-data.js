const { Client, Databases } = require('node-appwrite');
require('dotenv').config({ path: '.env.local' });

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Appwrite
const client = new Client()
    .setEndpoint(process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT)
    .setProject(process.env.NEXT_PUBLIC_APPWRITE_PROJECT_ID)
    .setKey(process.env.APPWRITE_API_KEY);

const databases = new Databases(client);
const DATABASE_ID = process.env.NEXT_PUBLIC_APPWRITE_DATABASE_ID;
const COLLECTION_ID = 'reels';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function generateRandomData(category, title) {
    const baseData = {
        isPremium: Math.random() > 0.7, // 30% –ø—Ä–µ–º–∏—É–º
        views: Math.floor(Math.random() * 50000) + 1000, // 1K - 51K –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        likes: Math.floor(Math.random() * 2000) + 50, // 50 - 2050 –ª–∞–π–∫–æ–≤
        rating: parseFloat((Math.random() * 2 + 3).toFixed(1)), // 3.0 - 5.0 —Ä–µ–π—Ç–∏–Ω–≥
        duration: Math.floor(Math.random() * 90) + 15, // 15 - 105 —Å–µ–∫—É–Ω–¥
        creatorAvatar: `/avatars/creator${Math.floor(Math.random() * 10) + 1}.jpg`,
    };

    // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    switch (category) {
        case 'website':
            return {
                ...baseData,
                price: Math.floor(Math.random() * 800) + 200, // $200 - $1000
                deliveryTime: ['3-5 –¥–Ω–µ–π', '5-7 –¥–Ω–µ–π', '1-2 –Ω–µ–¥–µ–ª–∏'][Math.floor(Math.random() * 3)],
                features: JSON.stringify([
                    '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω',
                    'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è',
                    '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å',
                    '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API',
                    '–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è'
                ]),
                requirements: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –ª–æ–≥–æ—Ç–∏–ø, –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Å–∞–π—Ç–∞ –∏ –ø—Ä–∏–º–µ—Ä—ã –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –¥–∏–∑–∞–π–Ω–æ–≤'
            };

        case 'video':
            return {
                ...baseData,
                price: Math.floor(Math.random() * 400) + 100, // $100 - $500
                deliveryTime: ['1-3 –¥–Ω—è', '3-5 –¥–Ω–µ–π', '5-7 –¥–Ω–µ–π'][Math.floor(Math.random() * 3)],
                features: JSON.stringify([
                    'HD –∫–∞—á–µ—Å—Ç–≤–æ',
                    '–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                    '–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ',
                    '–°—É–±—Ç–∏—Ç—Ä—ã',
                    '–ë—Ä–µ–Ω–¥–∏–Ω–≥'
                ]),
                requirements: '–û–ø–∏—à–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞, —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Å—Ç–∏–ª—é'
            };

        case 'bot':
            return {
                ...baseData,
                price: Math.floor(Math.random() * 600) + 300, // $300 - $900
                deliveryTime: ['5-7 –¥–Ω–µ–π', '1-2 –Ω–µ–¥–µ–ª–∏', '2-3 –Ω–µ–¥–µ–ª–∏'][Math.floor(Math.random() * 3)],
                features: JSON.stringify([
                    '–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                    '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API',
                    '–û–±—É—á–µ–Ω–∏–µ –Ω–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö',
                    '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤',
                    '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞'
                ]),
                requirements: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ FAQ, –ø—Ä–∏–º–µ—Ä—ã –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏'
            };

        case 'design':
            return {
                ...baseData,
                price: Math.floor(Math.random() * 300) + 100, // $100 - $400
                deliveryTime: ['2-3 –¥–Ω—è', '3-5 –¥–Ω–µ–π', '5-7 –¥–Ω–µ–π'][Math.floor(Math.random() * 3)],
                features: JSON.stringify([
                    '–í–µ–∫—Ç–æ—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã',
                    '–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ –≤ PSD/Figma',
                    '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Å—Ç–∏–ª—é',
                    '–ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤',
                    '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∞'
                ]),
                requirements: '–û–ø–∏—à–∏—Ç–µ —Å—Ç–∏–ª—å, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ —Ü–≤–µ—Ç–∞, —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –∏ —Å—Ñ–µ—Ä—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è'
            };

        default:
            return {
                ...baseData,
                price: Math.floor(Math.random() * 500) + 150,
                deliveryTime: '3-7 –¥–Ω–µ–π',
                features: JSON.stringify(['–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞']),
                requirements: '–°–≤—è–∂–∏—Ç–µ—Å—å –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞'
            };
    }
}

async function updateReelsData() {
    try {
        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ reels...');

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
        const response = await databases.listDocuments(DATABASE_ID, COLLECTION_ID);
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${response.documents.length}`);

        if (response.documents.length === 0) {
            console.log('‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
            return;
        }

        let updatedCount = 0;

        for (const doc of response.documents) {
            try {
                console.log(`üîß –û–±–Ω–æ–≤–ª—è–µ–º: "${doc.title}"`);

                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                const newData = generateRandomData(doc.category, doc.title);

                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
                await databases.updateDocument(
                    DATABASE_ID,
                    COLLECTION_ID,
                    doc.$id,
                    newData
                );

                console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: "${doc.title}" - ${newData.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, —Ä–µ–π—Ç–∏–Ω–≥ ${newData.rating}`);
                updatedCount++;

                // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
                await new Promise(resolve => setTimeout(resolve, 300));

            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ "${doc.title}":`, error.message);
            }
        }

        console.log(`\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount} –∏–∑ ${response.documents.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
        const updatedResponse = await databases.listDocuments(DATABASE_ID, COLLECTION_ID);

        console.log('\nüìã –¢–æ–ø 3 —Ä–∏–ª—Å–∞ –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º:');
        const sortedByViews = updatedResponse.documents
            .sort((a, b) => b.views - a.views)
            .slice(0, 3);

        sortedByViews.forEach((doc, index) => {
            console.log(`${index + 1}. "${doc.title}" - ${doc.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, —Ä–µ–π—Ç–∏–Ω–≥ ${doc.rating}, —Ü–µ–Ω–∞ $${doc.price}`);
        });

        console.log('\nüìã –ü—Ä–µ–º–∏—É–º —Ä–∏–ª—Å—ã:');
        const premiumReels = updatedResponse.documents.filter(doc => doc.isPremium);
        premiumReels.forEach(doc => {
            console.log(`   üíé "${doc.title}" - $${doc.price} (${doc.deliveryTime})`);
        });

    } catch (error) {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    try {
        console.log('üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Appwrite...');
        console.log(`üì° Endpoint: ${process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT}`);
        console.log(`üóÇÔ∏è  Project: ${process.env.NEXT_PUBLIC_APPWRITE_PROJECT_ID}`);
        console.log(`üíæ Database: ${process.env.NEXT_PUBLIC_APPWRITE_DATABASE_ID}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await databases.get(DATABASE_ID);
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n');

        await updateReelsData();

        console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã!');

    } catch (error) {
        console.error('üí• –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
        console.log('\nüîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
        console.log('   1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env.local');
        console.log('   2. API –∫–ª—é—á —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ –∑–∞–ø–∏—Å—å');
        console.log('   3. –°—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏');
    }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main();
